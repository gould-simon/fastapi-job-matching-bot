"""create_bot_tables

Revision ID: cad4ffb43d2f
Revises: 
Create Date: 2025-02-05 22:57:23.406173

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cad4ffb43d2f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('telegram_id', sa.BIGINT(), nullable=False),
        sa.Column('username', sa.String(255), nullable=True),
        sa.Column('first_name', sa.String(255), nullable=True),
        sa.Column('last_name', sa.String(255), nullable=True),
        sa.Column('cv_text', sa.TEXT(), nullable=True),
        sa.Column('cv_embedding', postgresql.ARRAY(sa.Float()), nullable=True),
        sa.Column('preferences', postgresql.JSONB(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('last_active', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id', name='users_pkey'),
        sa.UniqueConstraint('telegram_id', name='users_telegram_id_key')
    )
    op.create_index('idx_users_telegram_id', 'users', ['telegram_id'], unique=False)

    op.create_table('user_searches',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('telegram_id', sa.BIGINT(), nullable=False),
        sa.Column('search_query', sa.TEXT(), nullable=False),
        sa.Column('structured_preferences', postgresql.JSONB(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['telegram_id'], ['users.telegram_id'], name='user_searches_telegram_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='user_searches_pkey')
    )
    op.create_index('idx_user_searches_telegram_id', 'user_searches', ['telegram_id'], unique=False)

    op.create_table('user_conversations',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('telegram_id', sa.BIGINT(), nullable=False),
        sa.Column('message', sa.TEXT(), nullable=False),
        sa.Column('is_user', sa.BOOLEAN(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['telegram_id'], ['users.telegram_id'], name='user_conversations_telegram_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='user_conversations_pkey')
    )

    op.create_table('job_matches',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('telegram_id', sa.BIGINT(), nullable=False),
        sa.Column('job_id', sa.INTEGER(), nullable=False),
        sa.Column('similarity_score', sa.FLOAT(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['telegram_id'], ['users.telegram_id'], name='job_matches_telegram_id_fkey'),
        sa.ForeignKeyConstraint(['job_id'], ['jobsapp_job.id'], name='job_matches_job_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='job_matches_pkey')
    )
    op.create_index('idx_job_matches_telegram_id', 'job_matches', ['telegram_id'], unique=False)
    op.create_index('idx_job_matches_job_id', 'job_matches', ['job_id'], unique=False)

    op.create_table('job_embeddings',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('job_id', sa.INTEGER(), nullable=False),
        sa.Column('embedding', postgresql.ARRAY(sa.Float()), nullable=True),
        sa.Column('embedding_vector', postgresql.ARRAY(sa.Float()), nullable=True),
        sa.Column('last_updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['job_id'], ['jobsapp_job.id'], name='job_embeddings_job_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='job_embeddings_pkey'),
        sa.UniqueConstraint('job_id', name='job_embeddings_job_id_key')
    )
    op.create_index('idx_job_embeddings_job_id', 'job_embeddings', ['job_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_job_embeddings_job_id', table_name='job_embeddings')
    op.drop_table('job_embeddings')
    op.drop_index('idx_job_matches_job_id', table_name='job_matches')
    op.drop_index('idx_job_matches_telegram_id', table_name='job_matches')
    op.drop_table('job_matches')
    op.drop_table('user_conversations')
    op.drop_index('idx_user_searches_telegram_id', table_name='user_searches')
    op.drop_table('user_searches')
    op.drop_index('idx_users_telegram_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
