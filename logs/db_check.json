{"message": "Logger configured", "taskName": null, "logger_name": "db_check", "handlers": ["console", "file"], "environment": "production", "timestamp": "2025-02-06T00:04:40.532878", "level": "INFO", "is_test": false, "file": "logging_config.py", "line": 84, "function": "get_logger"}
{"message": "Starting database check", "taskName": "Task-1", "environment": "production", "timestamp": "2025-02-06T00:04:40.533142", "level": "INFO", "is_test": false, "file": "check_db.py", "line": 17, "function": "check_db"}
{"message": "Database connection successful", "taskName": "Task-1", "timestamp": "2025-02-06T00:04:48.102886", "level": "INFO", "environment": "production", "is_test": false, "file": "check_db.py", "line": 26, "function": "check_db"}
{"message": "Jobs table check", "taskName": "Task-1", "count": 0, "timestamp": "2025-02-06T00:04:48.695942", "level": "INFO", "environment": "production", "is_test": false, "file": "check_db.py", "line": 31, "function": "check_db"}
{"message": "Database query error", "taskName": "Task-1", "error": "(sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation \"jobsapp_accountingfirm\" does not exist\n[SQL: SELECT COUNT(*) FROM jobsapp_accountingfirm]\n(Background on this error at: https://sqlalche.me/e/20/f405)", "error_type": "ProgrammingError", "timestamp": "2025-02-06T00:04:49.301481", "level": "ERROR", "environment": "production", "is_test": false, "file": "check_db.py", "line": 82, "function": "check_db", "stack_trace": ["  File \"/Users/dudleygould/fastapi-job-matching-bot/check_db.py\", line 100, in <module>\n    asyncio.run(check_db())\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/runners.py\", line 194, in run\n    return runner.run(main)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/runners.py\", line 118, in run\n    return self._loop.run_until_complete(task)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py\", line 707, in run_until_complete\n    self.run_forever()\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py\", line 678, in run_forever\n    self._run_once()\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py\", line 2033, in _run_once\n    handle._run()\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/events.py\", line 89, in _run\n    self._context.run(self._callback, *self._args)\n", "  File \"/Users/dudleygould/fastapi-job-matching-bot/check_db.py\", line 82, in check_db\n    logger.error(\"Database query error\", extra={\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1548, in error\n    self._log(ERROR, msg, args, **kwargs)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1664, in _log\n    self.handle(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1680, in handle\n    self.callHandlers(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1736, in callHandlers\n    hdlr.handle(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1026, in handle\n    self.emit(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/handlers.py\", line 81, in emit\n    logging.FileHandler.emit(self, record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1264, in emit\n    StreamHandler.emit(self, record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1150, in emit\n    msg = self.format(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 998, in format\n    return fmt.format(record)\n", "  File \"/Users/dudleygould/fastapi-job-matching-bot/venv/lib/python3.13/site-packages/pythonjsonlogger/jsonlogger.py\", line 243, in format\n    self.add_fields(log_record, record, message_dict)\n", "  File \"/Users/dudleygould/fastapi-job-matching-bot/app/logging_config.py\", line 44, in add_fields\n    log_record['stack_trace'] = traceback.format_stack()\n"]}
{"message": "Database connection error", "taskName": "Task-1", "error": "(sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation \"jobsapp_accountingfirm\" does not exist\n[SQL: SELECT COUNT(*) FROM jobsapp_accountingfirm]\n(Background on this error at: https://sqlalche.me/e/20/f405)", "error_type": "ProgrammingError", "environment": "production", "timestamp": "2025-02-06T00:04:49.600649", "level": "ERROR", "is_test": false, "file": "check_db.py", "line": 90, "function": "check_db", "stack_trace": ["  File \"/Users/dudleygould/fastapi-job-matching-bot/check_db.py\", line 100, in <module>\n    asyncio.run(check_db())\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/runners.py\", line 194, in run\n    return runner.run(main)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/runners.py\", line 118, in run\n    return self._loop.run_until_complete(task)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py\", line 707, in run_until_complete\n    self.run_forever()\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py\", line 678, in run_forever\n    self._run_once()\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/base_events.py\", line 2033, in _run_once\n    handle._run()\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/events.py\", line 89, in _run\n    self._context.run(self._callback, *self._args)\n", "  File \"/Users/dudleygould/fastapi-job-matching-bot/check_db.py\", line 90, in check_db\n    logger.error(\"Database connection error\", extra={\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1548, in error\n    self._log(ERROR, msg, args, **kwargs)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1664, in _log\n    self.handle(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1680, in handle\n    self.callHandlers(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1736, in callHandlers\n    hdlr.handle(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1026, in handle\n    self.emit(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/handlers.py\", line 81, in emit\n    logging.FileHandler.emit(self, record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1264, in emit\n    StreamHandler.emit(self, record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 1150, in emit\n    msg = self.format(record)\n", "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/logging/__init__.py\", line 998, in format\n    return fmt.format(record)\n", "  File \"/Users/dudleygould/fastapi-job-matching-bot/venv/lib/python3.13/site-packages/pythonjsonlogger/jsonlogger.py\", line 243, in format\n    self.add_fields(log_record, record, message_dict)\n", "  File \"/Users/dudleygould/fastapi-job-matching-bot/app/logging_config.py\", line 44, in add_fields\n    log_record['stack_trace'] = traceback.format_stack()\n"]}
